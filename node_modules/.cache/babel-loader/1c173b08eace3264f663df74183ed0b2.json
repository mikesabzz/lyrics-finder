{"ast":null,"code":"var _jsxFileName = \"/Users/michaelsabzevari/Desktop/personal_projects/react/lyrics-finder/src/components/LyricFinder/index.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport Lyrics from '../Lyrics';\nimport FormInput from '../FormInput';\n\nclass LyricFinder extends Component {\n  constructor() {\n    super();\n\n    this.fetchData = async () => {\n      this.setState({\n        loading: true\n      });\n      await axios.get(`https://api.lyrics.ovh/v1/${this.state.artist}/${this.state.title}`).then(res => {\n        console.log(res);\n        this.setState({\n          loading: false,\n          artistLyrics: res.data\n        });\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          error: \"Lyrics not Available\"\n        });\n      });\n    };\n\n    this.state = {\n      loading: false,\n      artistLyrics: {},\n      error: \"\",\n      artist: \"\",\n      title: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSecondChange = this.handleSecondChange.bind(this);\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSecondChange(event) {\n    event.preventDefault();\n    const _event$target2 = event.target,\n          name = _event$target2.name,\n          value = _event$target2.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.fetchData();\n    this.handleChange(event);\n    this.handleSecondChange(event);\n  }\n\n  render() {\n    if (this.state.loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Loading...\");\n    } else if (this.state.error) {\n      return this.state.error;\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(FormInput, {\n        handleSubmit: this.handleSubmit,\n        handleChange: this.handleChange,\n        handleSecondChange: this.handleSecondChange,\n        artist: this.state.artist,\n        title: this.state.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(Lyrics, {\n        artistLyrics: this.state.artistLyrics,\n        loading: this.state.loading,\n        error: this.state.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default LyricFinder;","map":{"version":3,"sources":["/Users/michaelsabzevari/Desktop/personal_projects/react/lyrics-finder/src/components/LyricFinder/index.js"],"names":["React","Component","axios","Lyrics","FormInput","LyricFinder","constructor","fetchData","setState","loading","get","state","artist","title","then","res","console","log","artistLyrics","data","catch","error","handleSubmit","bind","handleChange","handleSecondChange","event","preventDefault","target","name","value","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,SAAP,MAAsB,cAAtB;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAChCK,EAAAA,WAAW,GAAG;AACV;;AADU,SAedC,SAfc,GAeF,YAAY;AACpB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,YAAMP,KAAK,CAACQ,GAAN,CAAW,6BAA4B,KAAKC,KAAL,CAAWC,MAAO,IAAG,KAAKD,KAAL,CAAWE,KAAM,EAA7E,EACDC,IADC,CACIC,GAAG,IAAI;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,aAAKP,QAAL,CAAc;AACVC,UAAAA,OAAO,EAAE,KADC;AAEVS,UAAAA,YAAY,EAAEH,GAAG,CAACI;AAFR,SAAd;AAIH,OAPC,EAQDC,KARC,CAQKC,KAAK,IAAI;AACZL,QAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACA,aAAKb,QAAL,CAAc;AAAEa,UAAAA,KAAK,EAAE;AAAT,SAAd;AACH,OAXC,CAAN;AAYH,KA7Ba;;AAEV,SAAKV,KAAL,GAAa;AACTF,MAAAA,OAAO,EAAE,KADA;AAETS,MAAAA,YAAY,EAAE,EAFL;AAGTG,MAAAA,KAAK,EAAE,EAHE;AAITT,MAAAA,MAAM,EAAE,EAJC;AAKTC,MAAAA,KAAK,EAAE;AALE,KAAb;AAOA,SAAKS,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBF,IAAxB,CAA6B,IAA7B,CAA1B;AAEH;;AAiBDC,EAAAA,YAAY,CAACE,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACC,cAAN;AADgB,0BAEMD,KAAK,CAACE,MAFZ;AAAA,UAETC,IAFS,iBAETA,IAFS;AAAA,UAEHC,KAFG,iBAEHA,KAFG;AAGhB,SAAKtB,QAAL,CAAc;AAAC,OAACqB,IAAD,GAAQC;AAAT,KAAd;AACH;;AACDL,EAAAA,kBAAkB,CAACC,KAAD,EAAQ;AACtBA,IAAAA,KAAK,CAACC,cAAN;AADsB,2BAEAD,KAAK,CAACE,MAFN;AAAA,UAEfC,IAFe,kBAEfA,IAFe;AAAA,UAETC,KAFS,kBAETA,KAFS;AAGtB,SAAKtB,QAAL,CAAc;AAAC,OAACqB,IAAD,GAAQC;AAAT,KAAd;AACH;;AACDR,EAAAA,YAAY,CAACI,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACC,cAAN;AACA,SAAKpB,SAAL;AACA,SAAKiB,YAAL,CAAkBE,KAAlB;AACA,SAAKD,kBAAL,CAAwBC,KAAxB;AACH;;AAEDK,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKpB,KAAL,CAAWF,OAAf,EAAwB;AACpB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,KAFD,MAEO,IAAI,KAAKE,KAAL,CAAWU,KAAf,EAAsB;AACzB,aAAQ,KAAKV,KAAL,CAAWU,KAAnB;AACH,KAFM,MAEA;AACP,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AACI,QAAA,YAAY,EAAE,KAAKC,YADvB;AAEI,QAAA,YAAY,EAAE,KAAKE,YAFvB;AAGI,QAAA,kBAAkB,EAAE,KAAKC,kBAH7B;AAII,QAAA,MAAM,EAAE,KAAKd,KAAL,CAAWC,MAJvB;AAKI,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,KALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EASI,oBAAC,MAAD;AACI,QAAA,YAAY,EAAE,KAAKF,KAAL,CAAWO,YAD7B;AAEI,QAAA,OAAO,EAAE,KAAKP,KAAL,CAAWF,OAFxB;AAGI,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWU,KAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,CADJ;AAgBE;AACL;;AAvE+B;;AA0EpC,eAAehB,WAAf","sourcesContent":["import React, {Component} from \"react\";\nimport axios from 'axios'\nimport Lyrics from '../Lyrics'\nimport FormInput from '../FormInput'\n\nclass LyricFinder extends Component {\n    constructor() {\n        super()\n        this.state = {\n            loading: false,\n            artistLyrics: {},\n            error: \"\",\n            artist: \"\",\n            title: \"\"\n        }\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSecondChange = this.handleSecondChange.bind(this)\n        \n    }\n    \n    fetchData = async () => {\n        this.setState({ loading: true })\n        await axios.get(`https://api.lyrics.ovh/v1/${this.state.artist}/${this.state.title}`)\n            .then(res => {\n                console.log(res)\n                this.setState({\n                    loading: false,\n                    artistLyrics: res.data\n                })\n            })\n            .catch(error => {\n                console.log(error)\n                this.setState({ error: \"Lyrics not Available\" })\n            })\n    }\n    handleChange(event) {\n        event.preventDefault()\n        const {name, value} = event.target\n        this.setState({[name]: value})\n    }\n    handleSecondChange(event) {\n        event.preventDefault()\n        const {name, value} = event.target\n        this.setState({[name]: value})\n    }\n    handleSubmit(event) {\n        event.preventDefault()\n        this.fetchData()\n        this.handleChange(event)\n        this.handleSecondChange(event)\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <div>Loading...</div>\n        } else if (this.state.error) {\n            return (this.state.error)\n        } else {\n        return (\n            <div>\n                <FormInput \n                    handleSubmit={this.handleSubmit} \n                    handleChange={this.handleChange} \n                    handleSecondChange={this.handleSecondChange} \n                    artist={this.state.artist}\n                    title={this.state.title}\n                />\n                {/* { this.state.error ? this.state.error : null} */}\n                <Lyrics\n                    artistLyrics={this.state.artistLyrics}\n                    loading={this.state.loading}\n                    error={this.state.error}\n                />\n            </div>\n        )}\n    }\n}\n\nexport default LyricFinder"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import React from\"react\";import'./ITunes.css';var ITunes=function ITunes(props){var array=props.itunes.map(function(itune){if(props.artist!=itune.artistName.toLowerCase()||props.title!=itune.trackName.toLowerCase()){return React.createElement(\"div\",null,props.ituneError);}else{return React.createElement(\"div\",{className:\"Itunes-url\"},React.createElement(\"img\",{src:itune.artworkUrl100}),React.createElement(\"br\",null),React.createElement(\"audio\",{controls:true},React.createElement(\"source\",{src:itune.previewUrl})));}});var ituneAudio=props.loading?React.createElement(\"div\",null,\"Loading Preview...\"):array;return React.createElement(\"div\",{className:\"lyric-body\"},props.ituneError?React.createElement(\"div\",null,\"Preview Not Found!\"):React.createElement(\"div\",null,ituneAudio));};export default ITunes;","map":{"version":3,"sources":["/Users/michaelsabzevari/Desktop/personal_projects/react/lyrics-finder/src/components/ITunes/index.js"],"names":["React","ITunes","props","array","itunes","map","itune","artist","artistName","toLowerCase","title","trackName","ituneError","artworkUrl100","previewUrl","ituneAudio","loading"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,cAAP,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,CAAW,CACtB,GAAMC,CAAAA,KAAK,CAAGD,KAAK,CAACE,MAAN,CAAaC,GAAb,CAAiB,SAAAC,KAAK,CAAI,CACpC,GAAKJ,KAAK,CAACK,MAAN,EAAgBD,KAAK,CAACE,UAAN,CAAiBC,WAAjB,EAAjB,EAAqDP,KAAK,CAACQ,KAAN,EAAeJ,KAAK,CAACK,SAAN,CAAgBF,WAAhB,EAAxE,CAAwG,CACpG,MAAQ,gCAAMP,KAAK,CAACU,UAAZ,CAAR,CACH,CAFD,IAEO,CACP,MACI,4BAAK,SAAS,CAAC,YAAf,EACI,2BAAK,GAAG,CAAEN,KAAK,CAACO,aAAhB,EADJ,CAEI,8BAFJ,CAGI,6BAAO,QAAQ,KAAf,EACI,8BAAQ,GAAG,CAAEP,KAAK,CAACQ,UAAnB,EADJ,CAHJ,CADJ,CAQE,CAAC,CAZO,CAAd,CAaI,GAAMC,CAAAA,UAAU,CAAGb,KAAK,CAACc,OAAN,CAAgB,oDAAhB,CAAgDb,KAAnE,CACJ,MACI,4BAAK,SAAS,CAAC,YAAf,EACKD,KAAK,CAACU,UAAN,CACG,oDADH,CAEC,+BAAMG,UAAN,CAHN,CADJ,CAQH,CAvBD,CAyBA,cAAed,CAAAA,MAAf","sourcesContent":["import React from \"react\";\nimport './ITunes.css'\n\nconst ITunes = (props) => {\n    const array = props.itunes.map(itune => {\n        if ((props.artist != itune.artistName.toLowerCase()) || (props.title != itune.trackName.toLowerCase())) {\n            return (<div>{props.ituneError}</div>) \n        } else {\n        return (\n            <div className=\"Itunes-url\">\n                <img src={itune.artworkUrl100} />\n                <br />\n                <audio controls>\n                    <source src={itune.previewUrl} />\n                </audio>\n            </div>\n        )}})\n        const ituneAudio = props.loading ? <div>Loading Preview...</div> : array\n    return (\n        <div className=\"lyric-body\">\n            {props.ituneError ? \n                <div>Preview Not Found!</div> \n            : <div>{ituneAudio}</div>}\n        </div>\n    )\n\n}     \n\nexport default ITunes"]},"metadata":{},"sourceType":"module"}
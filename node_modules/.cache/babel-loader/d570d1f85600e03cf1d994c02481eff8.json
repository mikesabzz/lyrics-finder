{"ast":null,"code":"var _jsxFileName = \"/Users/michaelsabzevari/Desktop/personal_projects/react/lyrics-finder/src/components/ITunes/index.js\";\nimport React from \"react\";\nimport './ITunes.css';\n\nconst ITunes = props => {\n  const array = props.itunes.map(itune => {\n    if (props.artist != itune.artistName.toLowerCase()) {\n      return props.ituneError;\n    } else {\n      return React.createElement(\"div\", {\n        className: \"Itunes-url\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: itune.artworkUrl100,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }), React.createElement(\"audio\", {\n        controls: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(\"source\", {\n        src: itune.previewUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      })));\n    }\n  });\n  const ituneAudio = props.loading ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Loading Preview...\") : array;\n  return React.createElement(\"div\", {\n    className: \"lyric-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, ituneAudio, props.ituneError ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Preview Not Found!\") : null);\n};\n\nexport default ITunes;","map":{"version":3,"sources":["/Users/michaelsabzevari/Desktop/personal_projects/react/lyrics-finder/src/components/ITunes/index.js"],"names":["React","ITunes","props","array","itunes","map","itune","artist","artistName","toLowerCase","ituneError","artworkUrl100","previewUrl","ituneAudio","loading"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtB,QAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaC,GAAb,CAAiBC,KAAK,IAAI;AACpC,QAAIJ,KAAK,CAACK,MAAN,IAAgBD,KAAK,CAACE,UAAN,CAAiBC,WAAjB,EAApB,EAAoD;AAAC,aAAQP,KAAK,CAACQ,UAAd;AAA2B,KAAhF,MACK;AACL,aACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAEJ,KAAK,CAACK,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAO,QAAA,QAAQ,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,GAAG,EAAEL,KAAK,CAACM,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAHJ,CADJ;AAQE;AAAC,GAXO,CAAd;AAYI,QAAMC,UAAU,GAAGX,KAAK,CAACY,OAAN,GAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAhB,GAAgDX,KAAnE;AACJ,SACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKU,UAFL,EAGKX,KAAK,CAACQ,UAAN,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADH,GAEC,IALN,CADJ;AAUH,CAxBD;;AA0BA,eAAeT,MAAf","sourcesContent":["import React from \"react\";\nimport './ITunes.css'\n\nconst ITunes = (props) => {\n    const array = props.itunes.map(itune => {\n        if (props.artist != itune.artistName.toLowerCase()) {return (props.ituneError) }\n        else {\n        return (\n            <div className=\"Itunes-url\">\n                <img src={itune.artworkUrl100} />\n                <br />\n                <audio controls>\n                    <source src={itune.previewUrl} />\n                </audio>\n            </div>\n        )}})\n        const ituneAudio = props.loading ? <div>Loading Preview...</div> : array\n    return (\n        <div className=\"lyric-body\">\n            {/* {props.loading ? <h1>Loading Preview...</h1> : array} */}\n            {ituneAudio}\n            {props.ituneError ? \n                <div>Preview Not Found!</div> \n            : null}\n        </div>\n    )\n\n}     \n\nexport default ITunes"]},"metadata":{},"sourceType":"module"}
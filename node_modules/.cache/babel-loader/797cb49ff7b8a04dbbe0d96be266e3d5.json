{"ast":null,"code":"var _jsxFileName = \"/Users/michaelsabzevari/Desktop/personal_projects/react/lyrics-finder/src/components/ITunes/index.js\";\nimport React from \"react\";\n\nconst ITunes = props => {\n  const array = props.itunes.map(itune => {\n    // const arrayFirst = props.loading? <h1>Loading...</h1> : array[0]\n    const condition = props.artist === itune.artistName.toLowerCase() && props.title === itune.trackName.toLowerCase() ? {\n      array\n    } : null;\n    console.log(condition);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, condition, React.createElement(\"audio\", {\n      controls: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"source\", {\n      src: itune.previewUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    })), React.createElement(\"img\", {\n      src: itune.artworkUrl100,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }));\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, props.error ? React.createElement(\"div\", {\n    className: \"lyric-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Preview Not Found!\") : null);\n};\n\nexport default ITunes;","map":{"version":3,"sources":["/Users/michaelsabzevari/Desktop/personal_projects/react/lyrics-finder/src/components/ITunes/index.js"],"names":["React","ITunes","props","array","itunes","map","itune","condition","artist","artistName","toLowerCase","title","trackName","console","log","previewUrl","artworkUrl100","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtB,QAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaC,GAAb,CAAiBC,KAAK,IAAI;AACpC;AACA,UAAMC,SAAS,GAAKL,KAAK,CAACM,MAAN,KAAiBF,KAAK,CAACG,UAAN,CAAiBC,WAAjB,EAAlB,IAAsDR,KAAK,CAACS,KAAN,KAAgBL,KAAK,CAACM,SAAN,CAAgBF,WAAhB,EAAvE,GAChB;AAACP,MAAAA;AAAD,KADgB,GACN,IADZ;AAEAU,IAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,SADL,EAEI;AAAO,MAAA,QAAQ,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,GAAG,EAAED,KAAK,CAACS,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,EAKI;AAAK,MAAA,GAAG,EAAET,KAAK,CAACU,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ;AASH,GAda,CAAd;AAgBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMKd,KAAK,CAACe,KAAN,GACG;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADH,GAIC,IAVN,CADJ;AAcH,CA/BD;;AAgCA,eAAehB,MAAf","sourcesContent":["import React from \"react\";\n\nconst ITunes = (props) => {\n    const array = props.itunes.map(itune => {\n        // const arrayFirst = props.loading? <h1>Loading...</h1> : array[0]\n        const condition = ((props.artist === itune.artistName.toLowerCase()) && (props.title === itune.trackName.toLowerCase())) ? \n          {array} : null\n        console.log(condition)\n        return (\n            <div>\n                {condition}\n                <audio controls>\n                    <source src={itune.previewUrl} />\n                </audio>\n                <img src={itune.artworkUrl100} />\n            </div>\n        )\n    })\n    \n    return (\n        <div>\n            {/* {array} */}\n            {/* {arrayFirst} */}\n            {/* {condition} */}\n\n            \n            {props.error ? \n                <div className=\"lyric-body\">\n                    Preview Not Found!\n                </div> \n            : null}\n        </div>\n    )\n}\nexport default ITunes"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/michaelsabzevari/Desktop/personal_projects/react/lyrics-finder/src/components/ITunes/index.js\";\nimport React from \"react\";\n\nconst ITunes = props => {\n  const array = props.itunes.map(itune => {\n    if (props.artist != itune.artistName.toLowerCase() && props.title != itune.trackName.toLowerCase()) {\n      return null;\n    } else {\n      return array;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"audio\", {\n      controls: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"source\", {\n      src: itune.previewUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    })), React.createElement(\"img\", {\n      src: itune.artworkUrl100,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }));\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, array, props.error ? React.createElement(\"div\", {\n    className: \"lyric-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Preview Not Found!\") : null);\n};\n\nexport default ITunes;","map":{"version":3,"sources":["/Users/michaelsabzevari/Desktop/personal_projects/react/lyrics-finder/src/components/ITunes/index.js"],"names":["React","ITunes","props","array","itunes","map","itune","artist","artistName","toLowerCase","title","trackName","previewUrl","artworkUrl100","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtB,QAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaC,GAAb,CAAiBC,KAAK,IAAI;AACrC,QAAKJ,KAAK,CAACK,MAAN,IAAgBD,KAAK,CAACE,UAAN,CAAiBC,WAAjB,EAAjB,IAAqDP,KAAK,CAACQ,KAAN,IAAeJ,KAAK,CAACK,SAAN,CAAgBF,WAAhB,EAAxE,EAAwG;AACnG,aAAQ,IAAR;AACH,KAFF,MAGM;AAAC,aAAQN,KAAR;AAAe;;AACrB,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,QAAQ,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,GAAG,EAAEG,KAAK,CAACM,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII;AAAK,MAAA,GAAG,EAAEN,KAAK,CAACO,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAOE,GAZQ,CAAd;AAaA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,KADL,EAKKD,KAAK,CAACY,KAAN,GACG;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADH,GAIC,IATN,CADJ;AAaH,CA3BD;;AA4BA,eAAeb,MAAf","sourcesContent":["import React from \"react\";\n\nconst ITunes = (props) => {\n    const array = props.itunes.map(itune => {\n       if ((props.artist != itune.artistName.toLowerCase()) && (props.title != itune.trackName.toLowerCase())) {\n            return (null)\n        }\n        else {return (array)}\n        return (\n            <div>\n                <audio controls>\n                    <source src={itune.previewUrl} />\n                </audio>\n                <img src={itune.artworkUrl100} />\n            </div>\n        )})\n    return (\n        <div>\n            {array}\n            {/* {condition} */}\n\n            \n            {props.error ? \n                <div className=\"lyric-body\">\n                    Preview Not Found!\n                </div> \n            : null}\n        </div>\n    )\n}\nexport default ITunes"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/michaelsabzevari/Desktop/personal_projects/react/lyrics-finder/src/components/ITunes/index.js\";\nimport React from \"react\";\n\nconst ITunes = props => {\n  const array = props.itunes.map(itune => {\n    const condition = props.artist != itune.artistName && props.title != itune.trackName ? {\n      arrayFirst\n    } : null;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(\"audio\", {\n      controls: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(\"source\", {\n      src: itune.previewUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    })), React.createElement(\"img\", {\n      src: itune.artworkUrl100,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }), condition);\n  });\n  const arrayFirst = props.loading ? React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Loading...\") : array[0];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, props.error ? React.createElement(\"div\", {\n    className: \"lyric-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Preview Not Found!\") : null);\n};\n\nexport default ITunes;","map":{"version":3,"sources":["/Users/michaelsabzevari/Desktop/personal_projects/react/lyrics-finder/src/components/ITunes/index.js"],"names":["React","ITunes","props","array","itunes","map","itune","condition","artist","artistName","title","trackName","arrayFirst","previewUrl","artworkUrl100","loading","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtB,QAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaC,GAAb,CAAiBC,KAAK,IAAI;AACpC,UAAMC,SAAS,GAAKL,KAAK,CAACM,MAAN,IAAgBF,KAAK,CAACG,UAAvB,IAAuCP,KAAK,CAACQ,KAAN,IAAeJ,KAAK,CAACK,SAA7D,GAClB;AAACC,MAAAA;AAAD,KADkB,GACH,IADf;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,QAAQ,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,GAAG,EAAEN,KAAK,CAACO,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII;AAAK,MAAA,GAAG,EAAEP,KAAK,CAACQ,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKKP,SALL,CADJ;AASH,GAZa,CAAd;AAaA,QAAMK,UAAU,GAAGV,KAAK,CAACa,OAAN,GAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAf,GAAqCZ,KAAK,CAAC,CAAD,CAA7D;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKD,KAAK,CAACc,KAAN,GACG;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADH,GAIC,IARN,CADJ;AAYH,CA3BD;;AA4BA,eAAef,MAAf","sourcesContent":["import React from \"react\";\n\nconst ITunes = (props) => {\n    const array = props.itunes.map(itune => {\n        const condition = ((props.artist != itune.artistName) && (props.title != itune.trackName)) ? \n        {arrayFirst} : null\n        return (\n            <div>\n                <audio controls>\n                    <source src={itune.previewUrl} />\n                </audio>\n                <img src={itune.artworkUrl100} />\n                {condition}\n            </div>\n        )\n    })\n    const arrayFirst = props.loading? <h1>Loading...</h1> : array[0]\n    return (\n        <div>\n            {/* {array} */}\n            {/* {arrayFirst} */}\n            \n            {props.error ? \n                <div className=\"lyric-body\">\n                    Preview Not Found!\n                </div> \n            : null}\n        </div>\n    )\n}\nexport default ITunes"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/michaelsabzevari/Desktop/lyrics-itune-app/src/components/LyricFinder/index.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport Lyrics from '../Lyrics';\nimport FormInput from '../FormInput';\nimport ITunes from '../ITunes';\n\nclass LyricFinder extends Component {\n  constructor() {\n    super();\n\n    this.getLyrics = async (artist, songTitle) => {\n      try {\n        const response = await axios.get(`https://api.genius.com/search?q=${artist} ${songTitle}`, {\n          headers: {\n            Authorization: 'l1GKdeMPaNuokdDFJTuKOAyYZtLoaYTnjRWRznan8trD7e2O6HmgtwsjuVL5dH8K' // Replace with your Genius API access token\n\n          }\n        });\n\n        if (response.data.response.hits.length > 0) {\n          const id = response.data.response.hits[0].result.id;\n          const lyricsResponse = await axios.get(`https://api.genius.com/songs/${id}`, {\n            headers: {\n              Authorization: 'l1GKdeMPaNuokdDFJTuKOAyYZtLoaYTnjRWRznan8trD7e2O6HmgtwsjuVL5dH8K' // Replace with your Genius API access token\n\n            }\n          });\n          const lyrics = lyricsResponse.data.response.song.lyrics;\n          return lyrics;\n        } else {\n          throw new Error('Lyrics not found');\n        }\n      } catch (error) {\n        console.error(error);\n        throw new Error('Error fetching lyrics');\n      }\n    };\n\n    this.fetchItunesData = async () => {\n      this.setState({\n        loading: true,\n        error: false\n      });\n      await axios.get(`https://itunes.apple.com/search?term=${this.state.artist}&term=${this.state.title}&limit=1`).then(res => {\n        this.setState({\n          loading: false,\n          itunes: res.data.results\n        });\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          error: true,\n          loading: false\n        });\n      });\n    };\n\n    this.state = {\n      loading: false,\n      artistLyrics: {},\n      error: \"\",\n      artist: \"\",\n      title: \"\",\n      itunes: [],\n      hidden: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSecondChange = this.handleSecondChange.bind(this);\n    this.clear = this.clear.bind(this);\n  } // fetchData = async () => {\n  //     this.setState({ loading: true, error: false })\n  //     await axios.get(`https://api.lyrics.ovh/v1/${this.state.artist}/${this.state.title}`)\n  //         .then(res => {\n  //             this.setState({\n  //                 loading: false,\n  //                 artistLyrics: res.data,\n  //             })\n  //         })\n  //         .catch(error => {\n  //             console.log(error)\n  //             this.setState({error: true, loading: false})\n  //         })\n  // }\n\n\n  clear() {\n    this.reset();\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSecondChange(event) {\n    event.preventDefault();\n    const _event$target2 = event.target,\n          name = _event$target2.name,\n          value = _event$target2.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.getLyrics(this.state.artist, this.state.title);\n    this.fetchItunesData();\n    this.handleChange(event);\n    this.handleSecondChange(event);\n    this.setState({\n      hidden: true\n    });\n  }\n\n  componentDidMount() {\n    document.body.style.backgroundColor = \"black\";\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      handleSubmit: this.handleSubmit,\n      handleChange: this.handleChange,\n      handleSecondChange: this.handleSecondChange,\n      artist: this.state.artist,\n      title: this.state.title,\n      clear: this.clear,\n      hidden: this.state.hidden,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(Lyrics, {\n      error: this.state.error,\n      artistLyrics: this.state.artistLyrics,\n      loading: this.state.loading,\n      hidden: this.state.hidden,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(ITunes, {\n      error: this.state.error,\n      itunes: this.state.itunes,\n      loading: this.state.loading,\n      artist: this.state.artist,\n      title: this.state.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default LyricFinder;","map":{"version":3,"sources":["/Users/michaelsabzevari/Desktop/lyrics-itune-app/src/components/LyricFinder/index.js"],"names":["React","Component","axios","Lyrics","FormInput","ITunes","LyricFinder","constructor","getLyrics","artist","songTitle","response","get","headers","Authorization","data","hits","length","id","result","lyricsResponse","lyrics","song","Error","error","console","fetchItunesData","setState","loading","state","title","then","res","itunes","results","catch","log","artistLyrics","hidden","handleSubmit","bind","handleChange","handleSecondChange","clear","reset","event","preventDefault","target","name","value","componentDidMount","document","body","style","backgroundColor","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport axios from 'axios'\nimport Lyrics from '../Lyrics'\nimport FormInput from '../FormInput'\nimport ITunes from '../ITunes'\n\nclass LyricFinder extends Component {\n    constructor() {\n        super()\n        this.state = {\n            loading: false,\n            artistLyrics: {},\n            error: \"\",\n            artist: \"\",\n            title: \"\",\n            itunes: [],\n            hidden: false,\n        }\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSecondChange = this.handleSecondChange.bind(this)\n        this.clear = this.clear.bind(this)         \n    }\n    \n    // fetchData = async () => {\n    //     this.setState({ loading: true, error: false })\n    //     await axios.get(`https://api.lyrics.ovh/v1/${this.state.artist}/${this.state.title}`)\n    //         .then(res => {\n    //             this.setState({\n    //                 loading: false,\n    //                 artistLyrics: res.data,\n    //             })\n    //         })\n    //         .catch(error => {\n    //             console.log(error)\n    //             this.setState({error: true, loading: false})\n    //         })\n    // }\n    getLyrics = async (artist, songTitle) => {\n        try {\n          const response = await axios.get(`https://api.genius.com/search?q=${artist} ${songTitle}`, {\n            headers: {\n              Authorization: 'l1GKdeMPaNuokdDFJTuKOAyYZtLoaYTnjRWRznan8trD7e2O6HmgtwsjuVL5dH8K', // Replace with your Genius API access token\n            },\n          });\n      \n          if (response.data.response.hits.length > 0) {\n            const { id } = response.data.response.hits[0].result;\n            const lyricsResponse = await axios.get(`https://api.genius.com/songs/${id}`, {\n              headers: {\n                Authorization: 'l1GKdeMPaNuokdDFJTuKOAyYZtLoaYTnjRWRznan8trD7e2O6HmgtwsjuVL5dH8K', // Replace with your Genius API access token\n              },\n            });\n      \n            const lyrics = lyricsResponse.data.response.song.lyrics;\n            return lyrics;\n          } else {\n            throw new Error('Lyrics not found');\n          }\n        } catch (error) {\n          console.error(error);\n          throw new Error('Error fetching lyrics');\n        }\n      };\n      \n\n    fetchItunesData = async () => {\n        this.setState({ loading: true, error: false})\n        await axios.get(`https://itunes.apple.com/search?term=${this.state.artist}&term=${this.state.title}&limit=1`)\n        .then(res => {\n            this.setState({\n                loading: false,\n                itunes: res.data.results,\n            })\n        })\n        .catch(error => {\n            console.log(error)\n            this.setState({error: true, loading: false})\n        })\n    }\n    clear() {\n        this.reset()\n    }\n    handleChange(event) {\n        event.preventDefault()\n        const {name, value} = event.target\n        this.setState({[name]: value})\n    }\n    handleSecondChange(event) {\n        event.preventDefault()\n        const {name, value} = event.target\n        this.setState({[name]: value})\n    }\n    handleSubmit(event) {\n        event.preventDefault()\n        this.getLyrics(this.state.artist, this.state.title)\n        this.fetchItunesData()\n        this.handleChange(event)\n        this.handleSecondChange(event)\n        this.setState({ hidden : true });\n    }\n    componentDidMount() {\n        document.body.style.backgroundColor = \"black\"    \n    }\n    render() {\n        return (\n            <div>\n                <FormInput\n                    handleSubmit={this.handleSubmit}\n                    handleChange={this.handleChange}\n                    handleSecondChange={this.handleSecondChange}\n                    artist={this.state.artist}\n                    title={this.state.title}\n                    clear={this.clear}\n                    hidden={this.state.hidden}\n                />\n                <Lyrics\n                    error={this.state.error}\n                    artistLyrics={this.state.artistLyrics}\n                    loading={this.state.loading}\n                    hidden={this.state.hidden}\n                />\n                <ITunes \n                    error={this.state.error}\n                    itunes={this.state.itunes}\n                    loading={this.state.loading}\n                    artist={this.state.artist}\n                    title={this.state.title}\n                /> \n            </div>\n        )\n    }\n}\nexport default LyricFinder"]},"metadata":{},"sourceType":"module"}
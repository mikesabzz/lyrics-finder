{"ast":null,"code":"var _jsxFileName = \"/Users/michaelsabzevari/Desktop/personal_projects/react/lyrics-finder/src/components/LyricFinder/index.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport Lyrics from '../Lyrics';\nimport FormInput from '../FormInput';\nimport ITunes from '../ITunes';\n\nclass LyricFinder extends Component {\n  constructor() {\n    this.state = {\n      loading: false,\n      artistLyrics: {},\n      error: \"\",\n      artist: \"\",\n      title: \"\",\n      itunes: []\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSecondChange = this.handleSecondChange.bind(this);\n    this.clear = this.clear.bind(this);\n  }\n\n  clear() {\n    this.reset();\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSecondChange(event) {\n    event.preventDefault();\n    const _event$target2 = event.target,\n          name = _event$target2.name,\n          value = _event$target2.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.fetchData();\n    this.fetchItunesData();\n    this.handleChange(event);\n    this.handleSecondChange(event);\n  }\n\n  componentDidMount() {\n    document.body.style.backgroundColor = \"black\";\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      handleSubmit: this.handleSubmit,\n      handleChange: this.handleChange,\n      handleSecondChange: this.handleSecondChange,\n      artist: this.state.artist,\n      title: this.state.title,\n      clear: this.clear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Lyrics, {\n      error: this.state.error,\n      artistLyrics: this.state.artistLyrics,\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(ITunes, {\n      error: this.state.error,\n      itunes: this.state.itunes,\n      loading: this.state.loading,\n      artist: this.state.artist,\n      title: this.state.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default LyricFinder;","map":{"version":3,"sources":["/Users/michaelsabzevari/Desktop/personal_projects/react/lyrics-finder/src/components/LyricFinder/index.js"],"names":["React","Component","axios","Lyrics","FormInput","ITunes","LyricFinder","constructor","state","loading","artistLyrics","error","artist","title","itunes","handleSubmit","bind","handleChange","handleSecondChange","clear","reset","event","preventDefault","target","name","value","setState","fetchData","fetchItunesData","componentDidMount","document","body","style","backgroundColor","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport axios from 'axios'\nimport Lyrics from '../Lyrics'\nimport FormInput from '../FormInput'\nimport ITunes from '../ITunes'\n\nclass LyricFinder extends Component {\n    constructor() {\n        this.state = {\n            loading: false,\n            artistLyrics: {},\n            error: \"\",\n            artist: \"\",\n            title: \"\",\n            itunes: []\n        }\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSecondChange = this.handleSecondChange.bind(this)\n        this.clear = this.clear.bind(this) \n        \n    }\n    \n    fetchData = async () => {\n        this.setState({ loading: true, error: false })\n        await axios.get(`https://api.lyrics.ovh/v1/${this.state.artist}/${this.state.title}`)\n            .then(res => {\n                this.setState({\n                    loading: false,\n                    artistLyrics: res.data\n                })\n            })\n            .catch(error => {\n                console.log(error)\n                this.setState({error: true, loading: false})\n            })\n    }\n\n    fetchItunesData = async () => {\n        this.setState({ loading: true, error: false})\n        await axios.get(`https://itunes.apple.com/search?term=${this.state.artist}&term=${this.state.title}&limit=1`)\n        .then(res => {\n            this.setState({\n                loading: false,\n                itunes: res.data.results,\n            })\n        })\n        .catch(error => {\n            console.log(error)\n            this.setState({error: true, loading: false})\n        })\n    }\n\n    clear() {\n        this.reset()\n    }\n    handleChange(event) {\n        event.preventDefault()\n        const {name, value} = event.target\n        this.setState({[name]: value})\n    }\n    handleSecondChange(event) {\n        event.preventDefault()\n        const {name, value} = event.target\n        this.setState({[name]: value})\n    }\n    handleSubmit(event) {\n        event.preventDefault()\n        this.fetchData()\n        this.fetchItunesData()\n        this.handleChange(event)\n        this.handleSecondChange(event)\n    }\n    componentDidMount() {\n        document.body.style.backgroundColor = \"black\"    \n    }\n    render() {\n        return (\n            <div>\n                <FormInput\n                    handleSubmit={this.handleSubmit}\n                    handleChange={this.handleChange}\n                    handleSecondChange={this.handleSecondChange}\n                    artist={this.state.artist}\n                    title={this.state.title}\n                    clear={this.clear}\n                />\n                <Lyrics\n                    error={this.state.error}\n                    artistLyrics={this.state.artistLyrics}\n                    loading={this.state.loading}\n                />\n                <ITunes \n                    error={this.state.error}\n                    itunes={this.state.itunes}\n                    loading={this.state.loading}\n                    artist={this.state.artist}\n                    title={this.state.title}\n                />\n            </div>\n        )\n    }\n}\nexport default LyricFinder"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/michaelsabzevari/Desktop/personal_projects/react/lyrics-finder/src/components/ITunes/index.js\";\nimport React from \"react\";\n\nconst ITunes = props => {\n  const array = props.itunes.map(itune => {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6\n      },\n      __self: this\n    }, React.createElement(\"audio\", {\n      controls: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, React.createElement(\"source\", {\n      src: itune.previewUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    })), React.createElement(\"img\", {\n      src: itune.artworkUrl100,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }));\n  });\n  const arrayFirst = props.loading ? React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Loading...\") : array[0];\n  const condition = props.artist != itune.artistName && props.title != itune.trackName ? null : {\n    arrayFirst\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, condition, props.error ? React.createElement(\"div\", {\n    className: \"lyric-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Preview Not Found!\") : null);\n};\n\nexport default ITunes;","map":{"version":3,"sources":["/Users/michaelsabzevari/Desktop/personal_projects/react/lyrics-finder/src/components/ITunes/index.js"],"names":["React","ITunes","props","array","itunes","map","itune","previewUrl","artworkUrl100","arrayFirst","loading","condition","artist","artistName","title","trackName","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtB,QAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaC,GAAb,CAAiBC,KAAK,IAAI;AACpC,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,QAAQ,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,GAAG,EAAEA,KAAK,CAACC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII;AAAK,MAAA,GAAG,EAAED,KAAK,CAACE,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAQH,GATa,CAAd;AAUA,QAAMC,UAAU,GAAGP,KAAK,CAACQ,OAAN,GAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAf,GAAqCP,KAAK,CAAC,CAAD,CAA7D;AACA,QAAMQ,SAAS,GAAKT,KAAK,CAACU,MAAN,IAAgBN,KAAK,CAACO,UAAvB,IAAuCX,KAAK,CAACY,KAAN,IAAeR,KAAK,CAACS,SAA7D,GAClB,IADkB,GACX;AAACN,IAAAA;AAAD,GADP;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKE,SAFL,EAGKT,KAAK,CAACc,KAAN,GACG;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADH,GAIC,IAPN,CADJ;AAaH,CA3BD;;AA4BA,eAAef,MAAf","sourcesContent":["import React from \"react\";\n\nconst ITunes = (props) => {\n    const array = props.itunes.map(itune => {\n        return (\n            <div>\n                <audio controls>\n                    <source src={itune.previewUrl} />\n                </audio>\n                <img src={itune.artworkUrl100} />\n            </div>\n        )\n    })\n    const arrayFirst = props.loading? <h1>Loading...</h1> : array[0]\n    const condition = ((props.artist != itune.artistName) && (props.title != itune.trackName)) ? \n    null : {arrayFirst} \n    return (\n        <div>\n            {/* {arrayFirst} */}\n            {condition}\n            {props.error ? \n                <div className=\"lyric-body\">\n                    Preview Not Found!\n                </div> \n            : null}\n            {/* (props.artist != itune.artistName) && (props.title != itune.trackName) ? \n            null : {arrayFirst}  */}\n        </div>\n    )\n}\nexport default ITunes"]},"metadata":{},"sourceType":"module"}